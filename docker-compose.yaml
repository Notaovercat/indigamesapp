version: "3.8"

services:
  database:
    image: postgres:latest
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  database_test:
    image: postgres:latest
    container_name: database_test
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5433:5432

  backend:
    container_name: backend
    restart: always
    build:
      context: ./backend
    command: pnpm run start:dev
    ports:
      - 3333:3333
    env_file:
      - ./backend/.env
    volumes:
      - backend_data:/usr/src/app
      - node_modules_data:/usr/src/app/node_modules
    networks:
      - postgres
    depends_on:
      - database
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - 3000:3000
    volumes:
      - frontend_data:/app
    env_file: ./frontend/.env
    depends_on:
      - backend

volumes:
  postgres_data:
  node_modules_data:
  backend_data:
  frontend_data:

networks:
  postgres:
    driver: bridge
